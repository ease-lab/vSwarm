name: AES End-to-End Tests

on:
  workflow_dispatch:
    schedule:
      - cron: "0 9 * * 1"
  push:
    branches: [main]
    paths:
      - "benchmarks/aes/**"
      - "utils/**"
      - "tools/**"
      - "runner/**"

  pull_request:
    branches: [main]
    paths:
      - "benchmarks/aes/**"
      - "utils/**"
      - "tools/**"
      - "runner/**"

env:
  GOOS: linux
  GO111MODULE: on
  PORT: 50051
  KUBECONFIG: /etc/kubernetes/admin.conf

jobs:
  build-and-push:
    name: Build and push all images
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          lfs: "true"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up Python version
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      - name: Set up python dependencies
        working-directory: benchmarks/aes/python
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install wheel ez_setup setuptools
          GRPC_PYTHON_BUILD_SYSTEM_ZLIB=true
          python3 -m pip install -r requirements.txt

      - name: Install protoc
        run: |
          PROTOC_ZIP=protoc-3.14.0-linux-x86_64
          curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.14.0/$PROTOC_ZIP.zip
          unzip -o $PROTOC_ZIP.zip -d $HOME/.local
          chmod +x $HOME/.local/bin/protoc
          rm -f $PROTOC_ZIP.zip

      - name: Build and push
        working-directory: benchmarks/aes
        env:
          GOPRIVATE_KEY: ${{ secrets.EASE_LAB_ACCESS_KEY }}
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
          chmod +x $(go env GOPATH)/bin/*
          export PATH="$PATH:$(go env GOPATH)/bin"
          make all
          make push

  test-compose:
    name: Test Docker Compose
    needs: build-and-push
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        service:
          [
            dc-aes-go,
            dc-aes-python,
            dc-aes-nodejs,
            dc-aes-go-tracing,
            dc-aes-python-tracing,
            dc-aes-nodejs-tracing,
          ]

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          lfs: "true"

      - name: start docker-compose benchmark
        working-directory: benchmarks/aes/yamls/docker-compose
        run: |
          docker-compose -f ${{ matrix.service }}.yaml pull
          docker-compose -f ${{ matrix.service }}.yaml up &> log_file &
          sleep 60s
          cat log_file

      - name: invoke the chain
        run: |
          ./tools/bin/grpcurl -plaintext -import-path ./tools/invoker/proto -proto helloworld.proto localhost:50000 helloworld.Greeter.SayHello

      - name: show docker-compose log
        run: cat benchmarks/aes/yamls/docker-compose/log_file

  test-knative:
    name: Test Knative Deployment
    needs: build-and-push
    env:
      GOCACHE: /root/tmp/gocache
      GOPATH: /root/tmp/gopath
    runs-on: [self-hosted, stock-knative]
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include:
          - service: aes-go
            file: kn-aes-go.yaml
          - service: aes-python
            file: kn-aes-python.yaml
          - service: aes-nodejs
            file: kn-aes-nodejs.yaml
          - service: aes-go-tracing
            file: kn-aes-go-tracing.yaml
          - service: aes-python-tracing
            file: kn-aes-python-tracing.yaml
          - service: aes-nodejs-tracing
            file: kn-aes-nodejs-tracing.yaml
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: "true"
      - name: Checkout LFS objects
        run: git lfs checkout

      - uses: actions/setup-go@v3
        with:
          go-version: 1.16

      - name: Deploy knative
        working-directory: benchmarks
        run: kn service apply -f ./aes/yamls/knative/${{ matrix.file }}

      - name: Test invoking once
        working-directory: tools/test-client
        run: |
          set -x
          go build ./test-client.go

          NODEPORT=$(kubectl get svc kourier-ingress -n kourier-system -o=jsonpath='{.spec.ports[0].nodePort}')

          url_list=$(kn service list | awk '$2 ~ /http/ {sub(/http\:\/\//,""); print $2}')
          for url in $url_list
          do
            ./test-client --addr $url:$NODEPORT --name "Example text for AES CI"
          done

      - name: Print logs
        if: ${{ always() }}
        run: |
          set -x
          container_list=$(kn service export ${{ matrix.service }} -o jsonpath="{.spec.service.spec.template.spec.containers[*].name}")
          for container_name in $container_list
          do
            kubectl logs -n default -c $container_name -l serving.knative.dev/service=${{ matrix.service }}
          done
      - name: Down
        if: ${{ always() }}
        run: kn service delete --all --namespace default --wait
