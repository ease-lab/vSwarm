name: Online Shop End-to-End Tests

on:
  workflow_dispatch:
  schedule:
    - cron: "0 9 * * 1"
  push:
    branches: [main]
    paths:
      - 'benchmarks/online-shop/*'
      - "utils/*"
      - "tools/*"
      - "runner/*"

  pull_request:
    branches: [main]
    paths:
      - 'benchmarks/online-shop/*'
      - "utils/*"
      - "tools/*"
      - "runner/*"

env:
  GOOS: linux
  GO111MODULE: on
  PORT: 50000
  KUBECONFIG: /etc/kubernetes/admin.conf

jobs:
  build-and-push:
    name: Build and push all images
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          lfs: "true"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        working-directory: benchmarks/online-shop/
        env:
          GOPRIVATE_KEY: ${{ secrets.EASE_LAB_ACCESS_KEY }}
        run: |
          make all
          make push

  test-compose:
    name: Test Docker Compose
    needs: build-and-push
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        file:
          [
            dc-adservice.yaml,
            dc-cartservice.yaml,
            dc-checkoutservice.yaml,
            dc-currencyservice.yaml,
            dc-emailservice.yaml,
            dc-paymentservice.yaml,
            dc-productcatalogservice.yaml,
            dc-recommendationservice.yaml,
            dc-shippingservice.yaml,
          ]

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          lfs: "true"

      - name: start docker-compose benchmark
        working-directory: benchmarks/online-shop/yamls/docker-compose
        run: |
          docker-compose -f ${{ matrix.file }} pull
          docker-compose -f ${{ matrix.file }} up &> log_file &
          sleep 60s
          cat log_file

      - name: invoke the chain
        run: |
          ./tools/bin/grpcurl -plaintext -import-path ./tools/invoker/proto -proto helloworld.proto localhost:50000 helloworld.Greeter.SayHello

      - name: show docker-compose log
        run: cat benchmarks/online-shop/yamls/docker-compose/log_file

  test-knative:
    name: Test Knative Deployment
    needs: build-and-push
    env:
      GOCACHE: /root/tmp/gocache
      GOPATH: /root/tmp/gopath
    runs-on: [self-hosted, stock-knative]
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        include:
          - service: adservice
            file: kn-adservice.yaml
          - service: cartservice
            file: kn-cartservice.yaml
            database: yes
          - service: checkoutservice
            file: kn-checkoutservice.yaml
          - service: currencyservice
            file: kn-currencyservice.yaml
          - service: emailservice
            file: kn-emailservice.yaml
          - service: paymentservice
            file: kn-paymentservice.yaml
          - service: productcatalogservice
            file: kn-productcatalogservice.yaml
          - service: recommendationservice
            file: kn-recommendationservice.yaml
          - service: shippingservice
            file: kn-shippingservice.yaml

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: "true"
      - name: Checkout LFS objects
        run: git lfs checkout

      - uses: actions/setup-go@v3
        with:
          go-version: 1.16

      - name: Deploy database if needed
        working-directory: benchmarks
        if: matrix.database == 'yes'
        run: |
          kubectl apply -f ./online-shop/yamls/knative/database.yaml

      - name: Deploy knative
        working-directory: benchmarks
        run: |
          kubectl apply -f ./online-shop/yamls/knative/${{ matrix.file }}
          kubectl wait --for=condition=Ready -f ./online-shop/yamls/knative/${{ matrix.file }} --timeout 200s

      - name: Check if service is ready
        working-directory: benchmarks
        run: |
          kn service list

      - name: Test invoking once
        working-directory: tools/test-client
        run: |
          set -x
          go build ./test-client.go
          NODEPORT=$(kubectl get svc kourier-ingress -n kourier-system -o=jsonpath='{.spec.ports[0].nodePort}')
          url=$(kn service describe ${{ matrix.service }} -o url | awk '$1 {sub(/http\:\/\//,""); print $1}')
          ./test-client --addr $url:$NODEPORT  --name "Example text for Online Shop CI"

      - name: Print logs
        if: ${{ always() }}
        run: |
          set -x
          container_list=$(kn service export ${{ matrix.service }} -o jsonpath="{.spec.service.spec.template.spec.containers[*].name}")
          for container_name in $container_list
          do
            kubectl logs -n default -c $container_name -l serving.knative.dev/service=${{ matrix.service }}
          done
      - name: Down
        if: ${{ always() }}
        run: kn service delete --all --namespace default --wait

      - name: Print logs from database
        if: matrix.database == 'yes'
        run: |
          set -x
          kubectl logs deployment/online-shop-database

      - name: Down
        working-directory: benchmarks
        if: matrix.database == 'yes'
        run: |
          kubectl delete -f ./online-shop/yamls/knative/database.yaml
